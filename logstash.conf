input {
  beats {
    port => 5044
  }
}

filter {
  # OK
  # if [docker][container][labels][com_docker_swarm_service_name] == "logs-stack_filebeat" {
  #   drop {}
  # }

  # Nao funcionou
  # if [service][name] == "filebeat" {
  #   drop {}
  # }

  #Funcionou
  if [docker][container][labels][name] == "filebeat" {
    drop {}
  }
  
  if [docker][container][labels][org_label-schema_name] == "logstash" {
    drop {}
  }

  if [docker][container][labels][com_docker_stack_namespace] == "portainer" {
    drop {}
  }

  if [docker][container][labels][com_docker_stack_namespace] == "app-test" {
    mutate {
      gsub => [
        "message", "^::ffff:\d+\.\d+\.\d+\.\d+ - - ", ""
      ]
    }
    
    grok {
      match => {
        "message" => "\[%{HTTPDATE:timestamp}\] \"%{WORD:http_method} %{PATH:request_path} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:response_size} \"%{DATA:referrer}\" \"%{DATA:user_agent}\""
      }
    }

    if [user_agent] == "Wget" {
      drop {}
    }
  }

  grok {
    match => {
      "message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{LOGLEVEL:log_level} %{NUMBER:thread_id} --- \[%{DATA:thread_name}\] %{GREEDYDATA:log_message}"
    }
  }

  mutate {
    add_field => { "cliente_id" => "${ClienteID}" }
    add_field => { "environment_deploy" => "${EnvironmentDeploy}" }
  }

}

# Replace is a valid license key
output {
  newrelic {
    base_uri => "https://log-api.newrelic.com/log/v1"
    license_key => "Insert_license_key"
  }
}